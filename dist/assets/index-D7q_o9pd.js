(function(){const f=document.createElement("link").relList;if(f&&f.supports&&f.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function m(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(e){if(e.ep)return;e.ep=!0;const s=m(e);fetch(e.href,s)}})();document.addEventListener("DOMContentLoaded",function(){const g=document.getElementById("status-section"),f=document.getElementById("logs-section"),m=document.getElementById("error-message");function i(t){m.innerText=t,m.classList.remove("hidden")}function e(){m.classList.add("hidden")}async function s(){e();try{const t=await fetch("/api/status");if(!t.ok)throw new Error("Failed to fetch platform statuses.");const c=await t.json();console.log("Platform statuses:",c);const o=[{platform:"Pello Website Analytics",disabled:!0},{platform:"iRealty EDM Analytics",disabled:!0},{platform:"LinkedIn Analytics",disabled:!0},{platform:"Google Ads Analytics",disabled:!0},{platform:"PropertyMe API",disabled:!0}];g.innerHTML=[...c,...o].map(n=>{const d=n.platform.toLowerCase().trim().replace(/[\s\.&]/g,""),r=n.disabled?"opacity-50 cursor-not-allowed":"",u=n.disabled?"disabled":"",a=n.disabled?"Coming Soon":"Sync Now";return`
                    <div class="bg-white shadow-md rounded-lg p-4 ${r}" id="platform-${d}">
                        <h2 class="text-xl font-semibold mb-2">${n.platform}</h2>
                        <p class="text-gray-600">Last sync: 
                            <span id="last-sync-${d}" class="font-medium text-gray-500">
                                ${n.lastSync||"N/A"}
                            </span>
                        </p>
                        <p class="text-gray-600">Status: 
                            <span id="status-${d}" class="font-medium ${n.status==="Connected"?"text-green-500":"text-red-500"}">
                                ${n.status||"Not Available"}
                            </span>
                        </p>
                        <div class="w-full bg-gray-200 rounded-full h-2.5 mt-4 hidden" id="progress-bar-${d}">
                            <div class="bg-blue-500 h-2.5 rounded-full progress-bar" style="width: 0%;"></div>
                        </div>
                        <button id="sync-now-${d}" class="bg-blue-500 text-white py-2 px-4 rounded mt-4" ${u}>
                            ${a}
                        </button>
                    </div>
                `}).join(""),p()}catch(t){i("Failed to load platform statuses. Please try again."),console.error("fetchStatus error:",t)}}async function l(){e();try{const t=await fetch("/api/logs");if(!t.ok)throw new Error("Failed to fetch logs.");const c=await t.json();f.innerHTML=c.map(o=>`<p>${o}</p>`).join("")}catch(t){i("Failed to load logs. Please try again."),console.error("fetchLogs error:",t)}}function p(){document.querySelectorAll('[id^="sync-now-"]').forEach(c=>{c.addEventListener("click",()=>{const o=c.id.replace("sync-now-","");console.log(`Attempting sync for platform: ${o}`),c.hasAttribute("disabled")?alert(`${o} sync functionality is coming soon!`):syncPlatform(o)})})}window.syncPlatform=function(t){const o={realestatecomau:"realestate",domaincomau:"domain",facebookinstagram:"facebook-instagram"}[t];if(!o){i(`No API endpoint for ${t}`);return}const n=document.getElementById(`progress-bar-${t}`),d=n.querySelector(".progress-bar"),r=document.getElementById(`status-${t}`);r.textContent="Syncing...",r.className="font-medium text-blue-500",n.classList.remove("hidden"),d.style.width="0%";const u=new EventSource(`/api/${o}/progress`);u.onmessage=function(a){const y=JSON.parse(a.data),h=y.step/y.total*100;d.style.width=`${h}%`,r.textContent=y.message,y.step===y.total&&(u.close(),n.classList.add("hidden"),r.textContent="Connected",r.className="font-medium text-green-500",l(),s())},u.onerror=function(){u.close(),i("Progress updates failed."),r.textContent="Error",r.className="font-medium text-red-500",n.classList.add("hidden")},fetch(`/api/${o}/sync`,{method:"POST"}).then(a=>{if(!a.ok)throw console.error(`Sync request failed for ${o} with status: ${a.status}`),new Error(`Sync failed with status ${a.status}`);return a.json()}).then(()=>{console.log(`Sync completed successfully for ${o}`),l()}).catch(a=>{console.error(`Sync failed for platform ${t}:`,a.message),i(`Sync failed: ${a.message}. Please try again.`),r.textContent="Error",r.className="font-medium text-red-500"})},s(),l()});
