(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function u(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(o){if(o.ep)return;o.ep=!0;const n=u(o);fetch(o.href,n)}})();document.addEventListener("DOMContentLoaded",function(){const p=document.getElementById("status-section"),l=document.getElementById("logs-section"),u=document.getElementById("error-message");function i(t){u.innerText=t,u.classList.remove("hidden")}function o(){u.classList.add("hidden")}async function n(){o();try{const t=await fetch("http://localhost:3000/api/status");if(!t.ok)throw new Error("Failed to fetch platform statuses.");const r=await t.json();p.innerHTML=r.map(e=>{const s=e.platform.toLowerCase().trim().replace(/[\s\.]/g,""),h=e.platform==="Domain.com.au"?'<button id="authorize-domain" class="mt-4"><i class="fa-solid fa-lock text-blue-500 text-xl"></i></button>':"";return`
                    <div class="bg-white shadow-md rounded-lg p-4" id="platform-${s}">
                        <h2 class="text-xl font-semibold mb-2">${e.platform}</h2>
                        <p class="text-gray-600">Last sync: 
                            <span id="last-sync-${s}" class="font-medium text-gray-500">
                                ${e.lastSync||"N/A"}
                            </span>
                        </p>
                        <p class="text-gray-600">Status: 
                            <span id="status-${s}" class="font-medium text-green-500">
                                ${e.status||"Pending"}
                            </span>
                        </p>
                        <div class="w-full bg-gray-200 rounded-full h-2.5 mt-4 hidden" id="progress-bar-${s}">
                            <div class="bg-blue-500 h-2.5 rounded-full progress-bar" style="width: 0%;"></div>
                        </div>
                        ${h}
                        <button id="sync-now-${s}" class="bg-blue-500 text-white py-2 px-4 rounded mt-4">
                            Sync Now
                        </button>
                    </div>
                `}).join(""),g()}catch(t){i("Failed to load platform statuses. Please try again."),console.error("fetchStatus error:",t)}}async function c(){o();try{const t=await fetch("http://localhost:3000/api/logs");if(!t.ok)throw new Error("Failed to fetch logs.");const r=await t.json(),e=Array.from(new Set(r));l.innerHTML=e.map(s=>`<p>${s}</p>`).join("")}catch(t){i("Failed to load logs. Please try again."),console.error("fetchLogs error:",t)}}function g(){const t=document.getElementById("authorize-domain");t&&t.addEventListener("click",async()=>{try{const e=await(await fetch("http://localhost:3000/api/domain/authorize")).json();e.authUrl?window.location.href=e.authUrl:alert("Failed to retrieve authorization URL.")}catch(r){console.error("Authorization failed:",r),alert("Authorization failed. Please try again.")}})}window.syncPlatform=function(t){const e={realestatecomau:"realestate",domaincomau:"domain"}[t];if(!e){i(`No API endpoint for ${t}`);return}const s=document.getElementById(`progress-bar-${t}`),h=s.querySelector(".progress-bar"),a=document.getElementById(`status-${t}`);document.getElementById(`last-sync-${t}`),a.textContent="Syncing...",a.className="font-medium text-blue-500",s.classList.remove("hidden"),h.style.width="0%";const f=new EventSource(`http://localhost:3000/api/${e}/progress`);f.onmessage=function(d){const m=JSON.parse(d.data),w=m.step/m.total*100;h.style.width=`${w}%`,a.textContent=m.message,m.step===m.total&&(f.close(),s.classList.add("hidden"),a.textContent="Connected",a.className="font-medium text-green-500",c(),n())},f.onerror=function(){f.close(),i("Progress updates failed."),a.textContent="Error",a.className="font-medium text-red-500",s.classList.add("hidden")},fetch(`http://localhost:3000/api/${e}/sync`,{method:"POST"}).then(d=>{if(!d.ok)throw new Error(`Sync failed with status ${d.status}`);return d.json()}).then(()=>{c()}).catch(d=>{console.error("Sync failed:",d),i("Sync failed. Please try again."),a.textContent="Error",a.className="font-medium text-red-500"})};const y=(t,r)=>{const e=document.createElement("div");e.classList.add("modal","fixed","z-50","inset-0","flex","items-center","justify-center","bg-gray-800","bg-opacity-50"),e.innerHTML=`
            <div class="bg-white p-6 rounded-lg shadow-lg max-w-md text-center">
                <h2 class="text-2xl font-bold mb-4">${t}</h2>
                <p class="text-gray-600">${r}</p>
                <button id="close-modal" class="bg-blue-500 text-white py-2 px-4 rounded mt-4">Close</button>
            </div>
        `,document.body.appendChild(e),document.getElementById("close-modal").addEventListener("click",()=>{document.body.removeChild(e)})};if(new URLSearchParams(window.location.search).has("authSuccess")){const t=document.getElementById("authorize-domain");t&&(t.innerHTML='<i class="fa-solid fa-unlock text-green-500 text-xl"></i>'),y("Authorization Successful","You can now sync with Domain.com.au."),window.history.replaceState({},document.title,window.location.pathname)}n(),c()});
